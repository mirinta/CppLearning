@startuml

abstract class AbstractShapeVisitor {
  +~AbstractShapeVisitor()
  +visit(Circle*) const
  +visit(Square*) const
}

abstract class AbstractShape {
  +~AbstractShape()
  +area() const
  +accept(AbstractShapeVisitor*)
}

class Circle {
  +Circle(double radius)
  +radius() const : double
  +area() const : double
  +accept(AbstractShapeVisitor*)
  -_radius : double
}

class Square {
  +Square(double side)
  +side() const : double
  +area() const : double
  +accept(AbstractShapeVisitor*)
  -_side : double
}

class SerializeShapeVisitor {
  +visit(Circle*) const
  +visit(Square*) const
}

class RenderShapeVisitor {
  +visit(Circle*) const
  +visit(Square*) const
}

AbstractShape <|-- Circle
AbstractShape <|-- Square
AbstractShape ..> AbstractShapeVisitor

AbstractShapeVisitor <|-- SerializeShapeVisitor
AbstractShapeVisitor <|-- RenderShapeVisitor

note right of Circle::accept
    v->visit(this)
end note

note left of Square::accept
    v->visit(this)
end note

@enduml